"""
Django settings for conf project.

Generated by 'django-admin startproject' using Django 5.0.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path
import os
from dotenv import load_dotenv
load_dotenv()


# OpenAI settings
from .openai_config import OpenAIConfig
OPENAI_CONFIG = OpenAIConfig()


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-s44g^c*!daj22$%#yu(rv+(b76!$i^)6ia=tzbdbc=v*#i9w!2"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


CORS_ALLOW_ALL_ORIGINS = True
CORS_ALLOW_HEADERS     = ['*']
CORS_ALLOW_METHODS     = ['*']
CORS_ALLOW_CREDENTIALS = True
CORS_ALLOW_PRIVATE_NETWORK = True
CSRF_TRUSTED_ORIGINS = [
    "http://127.0.0.1:3000", 
    "http://127.0.0.1", 
    "http://localhost:3000", 
    "http://localhost"
]


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "genscene.apps.GensceneConfig",
    'corsheaders',
]

#from .middleware import RequestCacheMiddleware

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    ## "django.middleware.csrf.CsrfViewMiddleware",
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "conf.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "conf.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases
# TODO: change the hard coded database settings to use the environment variables
DATABASES = {
    'default': {
        "ENGINE": os.environ.get("STATE_DB_ENGINE", "Engine for the STATE db"),
        "NAME": os.environ.get("STATE_DB_NAME", "Name for the STATE db"),
        "USER": os.environ.get("STATE_DB_USER", "User for the STATE db"),
        "PASSWORD": os.environ.get("STATE_DB_PASSWORD", "Password for the STATE db"),
        "HOST": os.environ.get("STATE_DB_HOST", "Host for the STATE db"),
        "PORT": os.environ.get("STATE_DB_PORT", "Port for the STATE db"),
    },
    # 'database_db': {
    #     "ENGINE": os.environ.get("DATABASE_DB_ENGINE", "Engine for the Database Example db"),
    #     "NAME": os.environ.get("DATABASE_DB_NAME", "Name for the Database Example db"),
    #     "USER": os.environ.get("DATABASE_DB_USER", "User for the Database Example db"),
    #     "PASSWORD": os.environ.get("DATABASE_DB_PASSWORD", "Password for the Database Example db"),
    #     "HOST": os.environ.get("DATABASE_DB_HOST", "Hostfor the Database Example db"),
    #     "PORT": os.environ.get("DATABASE_DB_PORT", "Port for the Database Example db"),
    # },

}


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {"NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",},
    {"NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",},
    {"NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",},
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = "static/"

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"




LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        "console": {
            "class": "logging.StreamHandler",
            "formatter": "simple",
        },
    },
    "formatters": {
        "verbose": {
            "format": "{levelname} {asctime} {name} {process:d} {thread:d} {message}",
            "style": "{",
        },
        "simple": {
            "format": "{levelname} {message}",
            "style": "{",
        },
    },
    'loggers': {
        'django': {
            'handlers': ["console"],
            'level': 'ERROR',
            "propagate": False
        },
        "django.utils.autoreload": {
            'handlers': ["console"],
            'level': 'INFO',
            "propagate": False
        },
        "genscene": {
            'handlers': ["console"],
            'level': 'INFO',
            "propagate": False
        },
    },
    "root": {
        "handlers": ["console"],
        "level": "ERROR",
    }}
